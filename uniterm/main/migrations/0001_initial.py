# Generated by Django 4.2.24 on 2025-09-20 20:35

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import main.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('session_key', models.CharField(blank=True, max_length=40, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Корзина',
                'verbose_name_plural': 'Корзины',
            },
        ),
        migrations.CreateModel(
            name='Products',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('article', models.CharField(max_length=100, verbose_name='Артикул')),
                ('availability', models.BooleanField(default=True, verbose_name='В наличии')),
                ('quantity', models.IntegerField(default=0, verbose_name='Количество')),
                ('description', models.TextField(blank=True, max_length=2000, verbose_name='Описание')),
                ('image', models.ImageField(upload_to=main.models.product_image_path, verbose_name='Изображение')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('is_hit', models.BooleanField()),
                ('brand', models.CharField(max_length=50, verbose_name='Бренд')),
                ('manufacturer', models.CharField(max_length=50, verbose_name='Производитель')),
                ('brand_country', models.CharField(max_length=50, verbose_name='Страна бренда')),
                ('color', models.CharField(max_length=50, verbose_name='Цвет')),
                ('compressor_type', models.CharField(max_length=50, verbose_name='Тип компрессора')),
                ('warranty', models.CharField(max_length=50, verbose_name='Гарантия')),
                ('original', models.BooleanField(default=True, verbose_name='Оригинал')),
                ('square', models.IntegerField(verbose_name='Площадь, м²')),
                ('heating_t_range', models.CharField(max_length=50, verbose_name='Диапазон t на обогрев, С')),
                ('ionizer', models.BooleanField(default=False, verbose_name='Ионизатор воздуха')),
                ('wifi', models.BooleanField(default=False, verbose_name='Wi-Fi')),
                ('fresh_air_mix', models.BooleanField(default=False, verbose_name='Подмес свежего воздуха')),
                ('height', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Высота, см')),
                ('width', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Ширина, см')),
                ('depth', models.DecimalField(decimal_places=2, max_digits=5, verbose_name='Глубина, см')),
                ('noise_level', models.IntegerField(verbose_name='Уровень шума, дБа')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата создания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активный')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название услуги')),
                ('slug', models.SlugField(unique=True, verbose_name='URL')),
                ('description', models.TextField(blank=True, verbose_name='Описание')),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Цена')),
                ('image', models.ImageField(blank=True, null=True, upload_to='services/', verbose_name='Изображение')),
                ('category', models.CharField(max_length=100, verbose_name='Категория')),
                ('duration', models.CharField(blank=True, max_length=50, verbose_name='Длительность')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Популярная услуга')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активная')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Услуга',
                'verbose_name_plural': 'Услуги',
                'ordering': ['category', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('item_type', models.CharField(choices=[('product', 'Товар'), ('service', 'Услуга')], default='product', max_length=10)),
                ('quantity', models.PositiveIntegerField(default=1)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('cart', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='main.cart')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.products')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.service')),
            ],
            options={
                'verbose_name': 'Элемент корзины',
                'verbose_name_plural': 'Элементы корзины',
            },
        ),
    ]
